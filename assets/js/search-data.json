{
  
    
        "post0": {
            "title": "Week 4 learning objectives",
            "content": "FRQ answer . Iteration Mini-Lab . Spring boot(extra) .",
            "url": "https://evmyclipz.github.io/sample1_blog/jupyter/2022/09/21/Week-4.html",
            "relUrl": "/jupyter/2022/09/21/Week-4.html",
            "date": " • Sep 21, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Ap Physics   Measurement And Graphical Analysis",
            "content": "Rohan Malipeddi 1 . AP Physics C: Mechanics . 19 August 2022 . AP Physics Lab #1 . Determine the radius in cm of the different sized disks. | . Measure the disk’s diameter using a ruler and apply the 2-5-8 rule for the last uncertain digit. . | Divide the measured length by 2. . | Determine the mass, in g, of the different sized disks. | . Measure the mass of each disk using a scale. | Determine the height (thickness) in cm of the disk material. (*DensityAluminum= 2.70 g/cm) | . Use the density equation to find the height. Height = (density *Area of the disk) / mass . | Do this for all the disks . | Pre-experiment question: . What is the precision of the meterstick used? Explain how you know using the data you found. | The precision of the meterstick used is to the 100th of a cm. I know this because I measured exactly to the last millimeter (10th’s place) and then used the 2-5-8 rule for the last uncertain digit (100th’s place) . Title: Relationship between mass and radius table .         . Circle # | Radius (cm) | Mass (g) | Linearized Values (cm2 or r^2) | . 1 | 6.80 | 0.845 | 46.240 | . 2 | 5.155 | 0.488 | 26.574 | . 3 | 3.900 | 0.300 | 15.210 | . 4 | 3.100 | 0.222 | 9.610 | . 5 | 2.355 | 0.078 | 5.546 | . Graph #1- Radius vs Mass . . Non-linear or quadratic graph showing the relationship between mass(g) of disks (y axis) and radius(cm) of disks (x axis), assuming uniform thickness. . Equation:y= 0.012463x^2 + 0.053317-0.099991 . Graph #2- Linearized Graph (Radius)^2 vs Mass . . This is a linearized graph with radius squared(cm^2)(x-axis) and mass(g)(y-axis). . How did we linearize our graph? From the original table , we squared the radius and kept the mass same because we found that the original graph of non-linearized data looked very similar to a parabola and so figured out that, if we square the radius, the graph becomes linearized. . Best fit line equation: y=0.010141+0.018138x . . . . . . MC Question: . E . | B . | C . |",
            "url": "https://evmyclipz.github.io/sample1_blog/2022/09/20/AP-Physics-Measurement-and-Graphical-analysis.html",
            "relUrl": "/2022/09/20/AP-Physics-Measurement-and-Graphical-analysis.html",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "FRQ-Type 01 answer",
            "content": "Part One . import java.lang.Math; class Level { int score; /** Returns true if the player reached the goal on this level and returns false otherwise */ public boolean goalReached() { double x; x = Math.random(); if(x&gt;=0.5) { return true; } else { return false; }/* implementation not shown */ } /** Returns the number of points (a positive integer) recorded for this level */ public int getPoints() { return score; } public void setPoints(int s) { score = s; } } public class Game { private Level levelOne; private Level levelTwo; private Level levelThree; /** Postcondition: All instance variables have been initialized. */ public Game() { levelOne = new Level(); levelTwo = new Level(); levelThree = new Level(); levelOne.setPoints(200); levelTwo.setPoints(100); levelThree.setPoints(500); } /** Returns true if this game is a bonus game and returns false otherwise */ public boolean isBonus() { double b; b = Math.random(); if(b&gt;=0.5) { return true; } else { return false; } } /** Simulates the play of this Game (consisting of three levels) and updates all relevant * game data */ public void play() { /* implementation not shown */ } /** Returns the score earned in the most recently played game, as described in part (a) */ //public int playManyTimes(int num) //{ /* to be implemented in part (b) */ } // There may be instance variables, constructors, and methods that are not shown. //Simulates the play of num games and returns the highest score earned public int getScore() { int score = 0; if (levelOne.goalReached()) { score += levelOne.getPoints(); if (levelTwo.goalReached()) { score += levelTwo.getPoints(); if (levelThree.goalReached()) { score += levelThree.getPoints(); } else { score = score; } } else { score = score; } } else { score = score; } if (isBonus()) { score = score * 3; } return score; } public static void main(String[] args) { Game np = new Game(); System.out.println(&quot;Score returned &quot;+np.getScore()); } } Game.main(null) . Score returned 200 . Part B . import java.lang.Math; class Level { int score; /** Returns true if the player reached the goal on this level and returns false otherwise */ public boolean goalReached() { double x; x = Math.random(); if(x&gt;=0.5) { return true; } else { return false; }/* implementation not shown */ } /** Returns the number of points (a positive integer) recorded for this level */ public int getPoints() { return score; } public void setPoints(int s) { score = s; } } public class Game { private Level levelOne; private Level levelTwo; private Level levelThree; /** Postcondition: All instance variables have been initialized. */ public Game() { levelOne = new Level(); levelTwo = new Level(); levelThree = new Level(); levelOne.setPoints(200); levelTwo.setPoints(100); levelThree.setPoints(500); } /** Returns true if this game is a bonus game and returns false otherwise */ public boolean isBonus() { double b; b = Math.random(); if(b&gt;=0.5) { return true; } else { return false; } } /** Simulates the play of this Game (consisting of three levels) and updates all relevant * game data */ public void play(int z) { System.out.println(&quot;The max score earned &quot;+playManyTimes(z)); } /** Returns the score earned in the most recently played game, as described in part (a) */ public int playManyTimes(int num) { int i,max = 0; int[] a=new int[num]; for (i=0;i&lt;num;i++) { a[i]=getScore(); } for(i=0;i&lt;num;i++) { if (max&lt;a[i]) { max = a[i]; } } return max; } // There may be instance variables, constructors, and methods that are not shown. //Simulates the play of num games and returns the highest score earned public int getScore() { int score = 0; if (levelOne.goalReached()) { score += levelOne.getPoints(); } else { score = score; } if (levelTwo.goalReached()) { score += levelTwo.getPoints(); } else { score = score; } if (levelThree.goalReached()) { score += levelThree.getPoints(); } else { score = score; } if (isBonus()) { score = score * 3; } return score; } public static void main(String[] args) { Game np = new Game(); //System.out.println(&quot;Score returned &quot;+np.getScore()); np.play(10); } } Game.main(null) . The max score earned 1800 .",
            "url": "https://evmyclipz.github.io/sample1_blog/jupyter/2022/09/15/FRQ-one-answer.html",
            "relUrl": "/jupyter/2022/09/15/FRQ-one-answer.html",
            "date": " • Sep 15, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Iteration mini-Lab",
            "content": "Definition . Imperetive Programming: Writing a sequence of commands for the computer to follow in chronoogical order and execute them | OOP: It is in the form of data and code, the data are the monkeys and printpeom is the method which uses the data. | . Since the monkeys act as a objects, this is a OOP style programming. . Notes: . Class is a template with data and methods either changing and accessing the data. Data can be prmitive data type variables or other class objects | Objects are instances of a class i.e. object acquires all the data and methods of its class | In our case, Monkey were our data and printPoem was our method accessing it. | . /* * Creator: Nighthawk Coding Society * Mini Lab Name: Hello Series,featuring Monkey Jumpers */ /** * Class for Monkeys: a 2D array of Monkeys * As well as method to print the Poem */ class MonkeyLoop { //The area between class definition and the 1st method is where we keep data for object in Java String [][] monkeys; //2D Array: AP CSA Unit 8: 2D array of strings //2D array is like a grid [x][y] // or like a spreadsheet [row][column] /** * Constructor initializes a 2D array of Monkeys */ public MonkeyLoop() { //Storing Data in 2D arrays monkeys = new String[][]{ //2D array above is just a name, &quot;new&quot; makes a container (&quot;object&quot;) //Monkey 0 { &quot;ʕง ͠° ͟ل͜ ͡°)ʔ&quot;, //[0][0] &quot; _⏄_/ &quot;, &quot; --0-- &quot;, &quot; ⎛ ⎞ &quot; }, //Monkey 1 { &quot;ʕ༼ ◕_◕ ༽ʔ&quot;, //[1][0] &quot; _⎏_/ &quot;, &quot; ++1++ &quot;, &quot; ⌋ ⌊ &quot; }, //Monkey 2 { &quot;ʕ(▀ ⍡ ▀)ʔ&quot;, //[2][0] &quot; _⎐_/ &quot;, &quot; &lt;-2-&gt; &quot;, &quot; 〈 〉 &quot; }, //Monkey 3 { &quot;ʕ ͡° ͜ʖ ° ͡ʔ&quot;, //[3][0] &quot; _⍾_/ &quot;, &quot; ==3== &quot;, &quot; _/ _ &quot; }, //Monkey 4 { &quot; (◕‿◕✿) &quot;, //[4][0] &quot; _⍾_/ &quot;, //[4][1] &quot; ==4== &quot;, //[4][2] &quot; _/ _ &quot; //[4][3] }, }; } /** * Loop and print monkeys in array * ... repeat until you reach zero ... */ public void printPoem() { //begin the poem System.out.println(); System.out.println(&quot;Monkey Jumpers Poem in Java Loopy&quot;); // monkeys (non-primitive) defined in constructor knows its length int monkeyCount = monkeys.length; System.out.println(monkeyCount); for (int i = monkeyCount; i &gt;= 1; i--) //loops through 2D array length backwards { //this print statement shows current count of Monkeys // concatenation (+) of the loop variable and string to form a countdown message System.out.println(); System.out.println(i + &quot; little monkeys jumping on the bed...&quot;); //how many separate parts are there in a monkey monkey? for (int col = 0; col &lt; 4; col++) { //cycles through &quot;cells&quot; of 2d array /*cycles through columns to print each monkey part by part, will eventually print entire column*/ for (int row = 0; row &lt; monkeyCount; row++) { // prints specific part of the monkey from the column System.out.print(monkeys[row][col] + &quot; &quot;); //this is new line between separate parts //System.out.println(); } //this new line gives separation between stanza of poem System.out.println(); } //countdown for poem, decrementing monkeyCount variable by 1 monkeyCount -= 1; System.out.println(&quot;One fell off and hurt himself.&quot;); System.out.println(&quot;Mama called the Doctor and the Doctor said,&quot;); System.out.println(&quot;No more monkeys jumping on the bed!&quot;); } //out of all the loops, prints finishing messages //System.out.println(&quot;No more monkeys jumping on the bed&quot;); System.out.println(&quot;0000000000000000000000000000000000&quot;); System.out.println(&quot; THE END &quot;); } /** * A Java Driver/Test method that is the entry point for execution */ public static void main(String[] args) { new MonkeyLoop().printPoem(); //a new monkey list and output in one step } } MonkeyLoop.main(null); . Monkey Jumpers Poem in Java Loopy 5 5 little monkeys jumping on the bed... ʕง ͠° ͟ل͜ ͡°)ʔ ʕ༼ ◕_◕ ༽ʔ ʕ(▀ ⍡ ▀)ʔ ʕ ͡° ͜ʖ ° ͡ʔ (◕‿◕✿) _⏄_/ _⎏_/ _⎐_/ _⍾_/ _⍾_/ --0-- ++1++ &lt;-2-&gt; ==3== ==4== ⎛ ⎞ ⌋ ⌊ 〈 〉 _/ _ _/ _ One fell off and hurt himself. Mama called the Doctor and the Doctor said, No more monkeys jumping on the bed! 4 little monkeys jumping on the bed... ʕง ͠° ͟ل͜ ͡°)ʔ ʕ༼ ◕_◕ ༽ʔ ʕ(▀ ⍡ ▀)ʔ ʕ ͡° ͜ʖ ° ͡ʔ _⏄_/ _⎏_/ _⎐_/ _⍾_/ --0-- ++1++ &lt;-2-&gt; ==3== ⎛ ⎞ ⌋ ⌊ 〈 〉 _/ _ One fell off and hurt himself. Mama called the Doctor and the Doctor said, No more monkeys jumping on the bed! 3 little monkeys jumping on the bed... ʕง ͠° ͟ل͜ ͡°)ʔ ʕ༼ ◕_◕ ༽ʔ ʕ(▀ ⍡ ▀)ʔ _⏄_/ _⎏_/ _⎐_/ --0-- ++1++ &lt;-2-&gt; ⎛ ⎞ ⌋ ⌊ 〈 〉 One fell off and hurt himself. Mama called the Doctor and the Doctor said, No more monkeys jumping on the bed! 2 little monkeys jumping on the bed... ʕง ͠° ͟ل͜ ͡°)ʔ ʕ༼ ◕_◕ ༽ʔ _⏄_/ _⎏_/ --0-- ++1++ ⎛ ⎞ ⌋ ⌊ One fell off and hurt himself. Mama called the Doctor and the Doctor said, No more monkeys jumping on the bed! 1 little monkeys jumping on the bed... ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ One fell off and hurt himself. Mama called the Doctor and the Doctor said, No more monkeys jumping on the bed! 0000000000000000000000000000000000 THE END . The running man animation . 1st: a random numbe generator returns a 0 or 1, if 1--&gt;run the animation of reaching level one, if 0--&gt; try again message. | 2nd: if 1--&gt;call goalReached method | . /* * Creator: Nighthawk Coding Society * Mini Lab Name: Hello Series,featuring Monkey Jumpers */ /** * Class for Monkeys: a 2D array of Monkeys * As well as method to print the Poem */ class MonkeyLoop { //The area between class definition and the 1st method is where we keep data for object in Java String [][] monkeys; //2D Array: AP CSA Unit 8: 2D array of strings //2D array is like a grid [x][y] // or like a spreadsheet [row][column] /** * Constructor initializes a 2D array of Monkeys */ public MonkeyLoop() { //Storing Data in 2D arrays monkeys = new String[][]{ //2D array above is just a name, &quot;new&quot; makes a container (&quot;object&quot;) //Monkey 0 { &quot; ( &quot;, &quot; &quot;, &quot; ) &quot;, &quot;##--&gt;&quot;, &quot; ) &quot;, &quot; / &quot;, &quot; ( &quot; }, //Monkey 1 { &quot; &quot;, &quot; / _ / &quot;, &quot; / / / &quot;, &quot;&gt;&gt;&gt;- |(*)| &quot;, &quot; /_ / / &quot;, &quot; /___ / &quot;, &quot; &quot; }, //Monkey 2 { &quot; &quot;, &quot; / _ / &quot;, &quot;&gt;&gt;&gt;- / / / &quot;, &quot;&gt;&gt;&gt;- |(*)| &quot;, &quot; /_ / / &quot;, &quot; /___ / &quot;, &quot; &quot; }, //Monkey 3 { &quot; &quot;, &quot; / _ / &quot;, &quot;&gt;&gt;&gt;- / / / &quot;, &quot;&gt;&gt;&gt;- |(*)| &quot;, &quot; /_ / /&quot;, &quot; &gt;&gt;&gt;- /___ / &quot;, &quot; &quot; }, //Monkey 4 { &quot; &quot;, &quot; &gt;&gt;&gt;- / _ / &quot;, &quot;&gt;&gt;&gt;- / / / &quot;, &quot;&gt;&gt;&gt;- |(*)| &quot;, &quot; /_ / /&quot;, &quot; &gt;&gt;&gt;- /___ / &quot;, &quot; &quot; //[4][3] }, }; } /** * Loop and print monkeys in array * ... repeat until you reach zero ... */ public void printPoem() { //begin the poem System.out.println(); System.out.println(&quot;Rohan Goes to the archery&quot;); // monkeys (non-primitive) defined in constructor knows its length int monkeyCount = monkeys.length; //System.out.println(monkeyCount); for (int i = monkeyCount,w=4; i &gt;= 1; i--,w--) //loops through 2D array length backwards { //this print statement shows current count of Monkeys // concatenation (+) of the loop variable and string to form a countdown message System.out.println(); System.out.println(i-1 + &quot; Target to be shot at...&quot;); //how many separate parts are there in a monkey monkey? for (int col = 0; col &lt; 7; col++) { //cycles through &quot;cells&quot; of 2d array /*cycles through columns to print each monkey part by part, will eventually print entire column*/ for (int row = 0; row &lt; monkeyCount; row++) { // prints specific part of the monkey from the column System.out.print(monkeys[row][col] + &quot; &quot;); //this is new line between separate parts //System.out.println(); } //this new line gives separation between stanza of poem System.out.println(); } //countdown for poem, decrementing monkeyCount variable by 1 monkeyCount -= 1; System.out.println(&quot;Rohan shot &quot;+w+&quot; arrows to get &quot;+w+&quot;-th target&quot;); System.out.println(&quot;Mama said use less arrows...&quot;); } //out of all the loops, prints finishing messages //System.out.println(&quot;No more monkeys jumping on the bed&quot;); System.out.println(&quot;0000000000000000000000000000000000&quot;); System.out.println(&quot; THE END &quot;); } /** * A Java Driver/Test method that is the entry point for execution */ public static void main(String[] args) { new MonkeyLoop().printPoem(); //a new monkey list and output in one step } } MonkeyLoop.main(null); . Rohan Goes to the archery 4 Target to be shot at... ( / _ / / _ / / _ / &gt;&gt;&gt;- / _ / ) / / / &gt;&gt;&gt;- / / / &gt;&gt;&gt;- / / / &gt;&gt;&gt;- / / / ##--&gt; &gt;&gt;&gt;- |(*)| &gt;&gt;&gt;- |(*)| &gt;&gt;&gt;- |(*)| &gt;&gt;&gt;- |(*)| ) /_ / / /_ / / /_ / / /_ / / / /___ / /___ / &gt;&gt;&gt;- /___ / &gt;&gt;&gt;- /___ / ( Rohan shot 4 arrows to get 4-th target Mama said use less arrows... 3 Target to be shot at... ( / _ / / _ / / _ / ) / / / &gt;&gt;&gt;- / / / &gt;&gt;&gt;- / / / ##--&gt; &gt;&gt;&gt;- |(*)| &gt;&gt;&gt;- |(*)| &gt;&gt;&gt;- |(*)| ) /_ / / /_ / / /_ / / / /___ / /___ / &gt;&gt;&gt;- /___ / ( Rohan shot 3 arrows to get 3-th target Mama said use less arrows... 2 Target to be shot at... ( / _ / / _ / ) / / / &gt;&gt;&gt;- / / / ##--&gt; &gt;&gt;&gt;- |(*)| &gt;&gt;&gt;- |(*)| ) /_ / / /_ / / / /___ / /___ / ( Rohan shot 2 arrows to get 2-th target Mama said use less arrows... 1 Target to be shot at... ( / _ / ) / / / ##--&gt; &gt;&gt;&gt;- |(*)| ) /_ / / / /___ / ( Rohan shot 1 arrows to get 1-th target Mama said use less arrows... 0 Target to be shot at... ( ) ##--&gt; ) / ( Rohan shot 0 arrows to get 0-th target Mama said use less arrows... 0000000000000000000000000000000000 THE END . Another Example for 2-D array . //importing scanner import java.util.Scanner; public class Matrix2by2 { // A class is defined here public int arr[][];//array declared here //instance of a class or an object //use of constructer to create objects which take control of events and actions public Matrix2by2() { arr = new int[2][2];//array defined here } //New obejct with different parameters which constructs my own array public Matrix2by2(int a,int b,int c,int d) { arr = new int[2][2];//array defined here setData(a,b,c,d); display(arr); } //public declaration because the variables need to be accessed throughout the program. public void setData(int a,int b,int c,int d) { //Method Setdata which assigns input to arr[][] this.arr[0][0]=a; this.arr[0][1]=b; this.arr[1][0]=c; this.arr[1][1]=d; } //public declaration because our main programm uses this method public void print() { //Method print to prompt used to take input final Scanner ms=new Scanner(System.in);//use of object scanner to p[rompt for input int a,b,c,d; boolean quit = false; while(!quit) { try { //safety feature to only take in number System.out.println(&quot;Enter first number of the first matrix&quot;); a = ms.nextInt(); System.out.println(&quot;Enter second number of the first matrix&quot;); b = ms.nextInt(); System.out.println(&quot;Enter third number of the first matrix&quot;); c = ms.nextInt(); System.out.println(&quot;Enter fourth number of the first matrix&quot;); d = ms.nextInt(); this.setData(a,b,c,d); display(arr); quit=true; } catch (Exception e) { ms.nextLine(); System.out.println( e +&quot;Not a number: try again&quot;); } } ms.close();//Another safety feature } private void display(int[][] arr) { //Method to print out the output in format. System.out.println(); System.out.println(&quot;|&quot;+arr[0][0]+&quot; &quot;+arr[0][1]+&quot;|&quot;); System.out.println(&quot; - - &quot;); System.out.println(&quot;|&quot;+arr[1][0]+&quot; &quot;+arr[1][1]+&quot;|&quot;); System.out.println(); } //Mutating input data to produce new output data. public void add(int[][] a1) { //Method to add two arrays int a2[][] = new int[2][2]; a2[0][0]=arr[0][0]+a1[0][0]; a2[0][1]=arr[0][1]+a1[0][1]; a2[1][0]=arr[1][0]+a1[1][0]; a2[1][1]=arr[1][1]+a1[1][1]; display(a2); } //Another example of mutating data which multiplies two array public void multiply(int[][] a1) { int a2[][] = new int[2][2]; a2[0][0]=(arr[0][0]*a1[0][0])+(arr[0][1]*a1[1][0]); a2[0][1]=(arr[0][0]*a1[0][1])+(arr[0][1]*a1[1][1]); a2[1][0]=(arr[1][0]*a1[0][0])+(arr[1][1]*a1[1][0]); a2[1][1]=(arr[1][0]*a1[0][1])+(arr[1][1]*a1[1][1]); display(a2); } public static void main(String[] args) { //Main program Matrix2by2 matrixOp1 = new Matrix2by2();//creating objects using Matrix2by2 constructer. Object#1 Matrix2by2 matrixOp2 = new Matrix2by2();//object#1 System.out.println(&quot;Matrix with my own data&quot;); Matrix2by2 matrixOp3 = new Matrix2by2(2,3,4,5); //Object with own data System.out.println(&quot;Enter 1st matrix.&quot;); matrixOp1.print(); System.out.println(&quot;Enter 2nd matrix&quot;); matrixOp2.print(); System.out.println(&quot;The output of matrix addition is &quot;); //Line below uses the values in the first matrix and mutate them by using the values of the second matrixOp1.add(matrixOp2.arr);//object calling a method //putting matrixOp2.arr into the brackets to let add function take the values of the second matrix. System.out.println(&quot;The output of matrix multiplication is &quot;); matrixOp1.multiply(matrixOp2.arr);//use of multiplication method System.out.println(&quot;The output of matrix with own matrix multiplication is &quot;); matrixOp1.multiply(matrixOp3.arr);//use of multiplication method } } Matrix2by2.main(null) . Matrix with my own data |2 3| - - |4 5| Enter 1st matrix. Enter first number of the first matrix Enter second number of the first matrix Enter third number of the first matrix Enter fourth number of the first matrix |5 8| - - |7 0| Enter 2nd matrix Enter first number of the first matrix Enter second number of the first matrix Enter third number of the first matrix Enter fourth number of the first matrix |45 888| - - |54 0| The output of matrix addition is |50 896| - - |61 0| The output of matrix multiplication is |657 4440| - - |315 6216| The output of matrix with own matrix multiplication is |42 55| - - |14 21| .",
            "url": "https://evmyclipz.github.io/sample1_blog/2022/09/14/Iteration-animation.html",
            "relUrl": "/2022/09/14/Iteration-animation.html",
            "date": " • Sep 14, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Self Reflection",
            "content": "What I learnt from video . People are trying too much to go beyoung their most basic needs | People should learn to appreaciate things more so that we can gain happiness at all times | Even though busy, make social connections with others and help them to gain happiness | Life&#39;s circumstances matter a lot but they don&#39;t | Practicing Healthy practices like excersize everyday is like taking the top anti-depressent drug | Learn to appreaciate the present more than the future | . Gratitude . I am grateful for my parents for working so hard in order to give me oppurtunity. | I am grateful to have friends who I can rely on. | I am grateful for having food to eat, a house to live and people to interact with | I am grateful to have such loving parents who cheer me up if I fail at something. | . Goals . I want to get my spot on the badminton national ranking. | Learn C++, java and Python by the time I graduate high school. | Lose weight and become fit | Carry out the plan I have made for this year. | Finish College apps soon | .",
            "url": "https://evmyclipz.github.io/sample1_blog/jupyter/2022/09/12/reflection.html",
            "relUrl": "/jupyter/2022/09/12/reflection.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Week 3",
            "content": "Lesson . Boolean Expressions | . Successful Deployment . . Focus and Habits .",
            "url": "https://evmyclipz.github.io/sample1_blog/jupyter/2022/09/11/Week-3.html",
            "relUrl": "/jupyter/2022/09/11/Week-3.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Lesson on boolean expressions",
            "content": "Covers: . If-else and Simple Code using Boolean expressions. | chains of if-elseif-elseif-elseif-elseif-else. | Switches and exampe on Switches. | De Morgan&#39;s Law description and program example. | . 2 W&#39;s and 1 How of boolean expressions: . What?-if and else are conditional statements which execute upon fulfillment. | Why?-To give computer intelligence by teaching it decision making skills. | How?- In java, we write the if statement and then in parenthesis write a condition | . boolean x = true ;//make the condition true to print if statement if(x) { System.out.println(&quot;The world is flat&quot;); } else { System.out.println(&quot;The world is a sphere&quot;); } //(!) operator to make it false boolean x = !true ;//make it false to print the else statement if(x) { System.out.println(&quot;The world is flat&quot;); } else { System.out.println(&quot;The world is a sphere&quot;); } . The world is flat The world is a sphere . Chain of choices . Creation of a if-elseif-else chain lets you give the computer more than 2 choices to pick from, but remember only one can execute at a time. | Switch is another version of if-elseif-else chain that does the same function as described above. But, if one does not break out of switch, it will run all the cases. | . | . import java.util.Scanner; public class Grade { public static void main(String[] args) { int g; Scanner k = new Scanner(System.in); System.out.println(&quot;Print your grade in CSA&quot;); g = k.nextInt(); //this is the start of the chain if(g&gt;90) { //the computer will pick its choice depending on user input. But only one choice. System.out.println(&quot;You got A!!!!&quot;); } else if(g&gt;80&amp;&amp;g&lt;90) { //checks if input is between 80 and 90 System.out.println(&quot;You got B(its okay)&quot;); } else if(g&gt;70&amp;&amp;g&lt;80) { //checks if input is between 70 and 80 System.out.println(&quot;You got C(Its not okay)&quot;); } else if(g&gt;60&amp;&amp;g&lt;70) { //checks if input is between 60 and 70 System.out.println(&quot;You got D(OH MY GOD)&quot;); } else { //checks if input is below 60 System.out.println(&quot;You FAIL!!!!!!!!!!!!!!!!!&quot;); } } } Grade.main(null) . Print your grade in CSA You FAIL!!!!!!!!!!!!!!!!! . import java.util.Scanner; public class Grade { public static void main(String[] args) { int g,i; Scanner k = new Scanner(System.in); g = k.nextInt(); if(g&gt;=90) { //the computer will pick its choice depending on user input. But only one choice. i=1; } else if(g&gt;=80&amp;&amp;g&lt;90) { //checks if input is between 80 and 90 and gives case number i=2; } else if(g&gt;=70&amp;&amp;g&lt;80) { //checks if input is between 70 and 80 and gives case number i=3; } else if(g&gt;=60&amp;&amp;g&lt;70) { //checks if input is between 60 and 70 and gives case number i=4; } else { //checks if input is below 60 and gives case number i=5; } // based on i value, one of the cases will run switch(i) { case 1: System.out.println(&quot;You got A!!!!&quot;); break; case 2: System.out.println(&quot;You got B(its okay)&quot;); break; case 3: System.out.println(&quot;You got C(Its not okay&quot;); break; case 4: System.out.println(&quot;You got D(OH MY GOD&quot;); break; default: System.out.println(&quot;You got F!!!!!!!!!!!!!!!&quot;); } } } Grade.main(null) . You got A!!!! . De Morgan&#39;s Law . Description: relates conjunction and disjunction by negating them . Vocab to understand: . +=Union/conjunction. | *= intersection/disjunction | (condition)&#39;= opposite of condition | . De Morgan&#39;s Laws: . A&#39;+B&#39;=(A*B)&#39; | (A+B)&#39;=A&#39;*B&#39; | boolean a = false, b = false; if(a|b) { System.out.print(&quot;The world is cylinder&quot;); } if(!a|!b) { //1st law expression of the left hand side System.out.println(&quot;The world is a cube&quot;); } if(!(a&amp;b)) { //1st law expression of the right hand side System.out.println(&quot;The world is again a cube&quot;); } if(!(a|b)) { //2nd Law expression of left hand side System.out.println(&quot;The world is a sphere&quot;); } if(!a&amp;!b) { //2nd Law expression of right hand side System.out.println(&quot;The world is again a sphere&quot;); } . The world is a cube The world is again a cube The world is a sphere The world is again a sphere .",
            "url": "https://evmyclipz.github.io/sample1_blog/jupyter/2022/09/07/Boolean-Expressions.html",
            "relUrl": "/jupyter/2022/09/07/Boolean-Expressions.html",
            "date": " • Sep 7, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "My Week 3 learning Objectives",
            "content": ". Learning Objectives from Code.org . Method signature has the name of the function and the parameters, can be called to the main program using .name(). | Constructer used to make the objects in the program perform certain operations which are already defined in the super class. | Super Class is a generalization and a sub class is a part of that generalization | . Using Objects Objectives . Own OOP to show mastery) | GUI I worked on with my pair, Aryan. | . Other things . Added some vocab | .",
            "url": "https://evmyclipz.github.io/sample1_blog/2022/09/06/Week-3.html",
            "relUrl": "/2022/09/06/Week-3.html",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "My Week 2 learning Objectives",
            "content": ". Learning Objectives from Code.org . Method signature has the name of the function and the parameters, can be called to the main program using .name(). | Constructer used to make the objects in the program perform certain operations which are already defined in the super class. | Super Class is a generalization and a sub class is a part of that generalization | . Using Objects Objectives . Own OOP to show mastery) | GUI I worked on with my pair, Aryan. | . Other things . Added some vocab | .",
            "url": "https://evmyclipz.github.io/sample1_blog/2022/09/06/Week-2.html",
            "relUrl": "/2022/09/06/Week-2.html",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "My first GUI program using java.",
            "content": "Java GUI Based Application . Application uses Math library methods . Description: Creates a GUI in which there are two menus, one is for some trigonometry functions which uses math library and other which converts decimal numbers to hex, binary and octal. . import java.awt.*; import java.awt.event.*; import javax.swing.*; import java.lang.Math.*; public class NamarRep extends JFrame implements ActionListener { private JFrame frame; private JMenuBar menubar; private JMenu menu; private JMenu menu1;//New menu private JLabel message = new JLabel(&quot;Enter Decimal Number:&quot;); private JLaberl outputMsg = new JLabel(&quot;&quot;); private JTextField numVal = new JTextField(20); private JButton clearButton = new JButton(&quot;Clear&quot;); public String[] NUM = { // 1D Array of Menu Choices &quot;Hex&quot;, &quot;Binary&quot;, &quot;Octal&quot; }; public String[] NUM1 = { // 1D Array of Menu #1 Choices &quot;Sine&quot;, &quot;Cosine&quot;, &quot;Tangent&quot; }; public NamarRep(String title) { //System.setProperty(&quot;java.awt.headless&quot;, &quot;false&quot;); // Initializing Key Objects frame = new JFrame(title); menubar = new JMenuBar(); menu = new JMenu(&quot;Number Representations&quot;); menu1 = new JMenu(&quot;Trigonometric Functions&quot;); //Initializing number converstions Menu objects for (String mx : NUM) { JMenuItem m = new JMenuItem(mx); m.addActionListener(this); menu.add(m); } //Initializing trigonometry Menu objects for (String mx : NUM1) { JMenuItem m = new JMenuItem(mx); m.addActionListener(this); menu1.add(m); } clearButton.addActionListener(this);//to reset the text menubar.add(menu);//add the new menu to the menubar menubar.add(menu1);//add the new menu to the menubar frame.setJMenuBar(menubar); //New layout with frame.setLayout(new FlowLayout()); //frame.setLayout(50,30); frame.add(message); frame.add(numVal); frame.add(clearButton);//adds clear button frame.add(outputMsg); frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); frame.setSize(500,200); //inreasing the window size frame.setVisible(true);//to be visible } //direction for actions public void actionPerformed(ActionEvent e) { String s = e.getActionCommand(); double value=0; String out=&quot;&quot;;// to produce the number conversiotn in a string if(s.equals(NUM1[0])) { value = Math.sin(Math.toRadians(Double.parseDouble(numVal.getText()))); outputMsg.setText(&quot;Output: Sine(&quot;+numVal.getText()+&quot;)=&quot;+value); numVal.setText(String.valueOf(value)); } else if (s.equals(NUM1[1])) { value = Math.cos(Math.toRadians(Double.parseDouble(numVal.getText()))); outputMsg.setText(&quot;Output: Cosine(&quot;+numVal.getText()+&quot;)=&quot;+value); numVal.setText(String.valueOf(value)); } else if(s.equals(NUM1[2])) { value = Math.tan(Math.toRadians(Double.parseDouble(numVal.getText()))); outputMsg.setText(&quot;Output: Tangent(&quot;+numVal.getText()+&quot;)=&quot;+value); numVal.setText(String.valueOf(value)); } else if(s.equals(NUM[0])) { //use of if and else to provide direction of action int x = Integer.parseInt(numVal.getText()); //Use fo wrapper class interger to convert from string to interger String in = numVal.getText(); out=&quot;&quot;; int a; // for(;x&gt;=1; x=x/16) { //decimal to hexadecimal a = x % 16; if(a&gt;9) { if(a==10) { out+= &#39;A&#39;;//appends to string } else if(a == 11) { out+= &#39;B&#39;; } else if(a == 12) { out+= &#39;C&#39;; } else if(a == 13) { out+= &#39;D&#39;; } else if(a == 14) { out+= &#39;E&#39;; } else if(a == 15) { out+= &#39;F&#39;; } } else out+=String.valueOf(a);//appends to string } //most important line of code, hardest to use numVal.setText(&quot;0x&quot;+reverseString(out));//use of method which reverses the string because if you go through normal division, the remainder are not in correct order of a hex structure. outputMsg.setText(&quot;Output: Hex(&quot;+in+&quot;)=&quot;+numVal.getText()); } else if(s.equals(NUM[1])) { //use of if and else to provide direction of action int x = Integer.parseInt(numVal.getText()); String in = numVal.getText(); int a; //always decleared to avoid mixing with other values out=&quot;&quot;; //always decleared to avoid mixing with other values for(; x&gt;=1; x=x/2) { //decimal to binary a = x % 2; out+=String.valueOf(a); } numVal.setText(reverseString(out)); //again use of outputMsg.setText(&quot;Output: Binary(&quot;+in+&quot;)=&quot;+numVal.getText()); } else if(s.equals(NUM[2])) { int x = Integer.parseInt(numVal.getText()); String in = numVal.getText(); int a; out = &quot;&quot;; for(;x&gt;=1;x=x/8) { //decimal to octal a = x % 8; out+=String.valueOf(a); } numVal.setText(reverseString(out)); outputMsg.setText(&quot;Output: Octal(&quot;+in+&quot;)=&quot;+numVal.getText()); } else if(s.equals(&quot;Clear&quot;)) //to clear input { numVal.setText(&quot;&quot;); outputMsg.setText(&quot;&quot;); } } // reverses the input string private String reverseString(String out) { char[] ch = out.toCharArray(); int x = out.length()-1; String s=&quot;&quot;; for(;x&gt;=0;x--) { s+=ch[x]; } return s; } public static void main(String[] args) { //main programm which starts the GUI programm.....Very Proud of myself NamarRep np= new NamarRep(&quot;My Menu&quot;); //gives control to NamarRep } } NamarRep.main(null) . java.lang.NoClassDefFoundError: Could not initialize class java.awt.GraphicsEnvironment$LocalGE at java.desktop/java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment(GraphicsEnvironment.java:129) at java.desktop/java.awt.Window.initGC(Window.java:487) at java.desktop/java.awt.Window.init(Window.java:507) at java.desktop/java.awt.Window.&lt;init&gt;(Window.java:549) at java.desktop/java.awt.Frame.&lt;init&gt;(Frame.java:423) at java.desktop/java.awt.Frame.&lt;init&gt;(Frame.java:388) at java.desktop/javax.swing.JFrame.&lt;init&gt;(JFrame.java:180) at NamarRep.&lt;init&gt;(#16:1) at NamarRep.main(#16:1) at .(#18:1) . Java GUI Snapshots . . .",
            "url": "https://evmyclipz.github.io/sample1_blog/2022/09/01/GUI-using-Java.html",
            "relUrl": "/2022/09/01/GUI-using-Java.html",
            "date": " • Sep 1, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Making Directory and deleting stuff",
            "content": "echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_dir=$HOME/vscode # change vscode to different name to test git clone export project=$project_dir/testRep # change APCSP to name of project from git clone export project_repo=&quot;https://github.com/evmyclipz/testRep.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Using conditional statement to create a project directory and project Directory /home/mrohan/vscode exists. Directory /home/mrohan/vscode/testRep does not exists... cloning https://github.com/evmyclipz/testRep.git Cloning into &#39;testRep&#39;... remote: Enumerating objects: 66, done. remote: Counting objects: 100% (66/66), done. remote: Compressing objects: 100% (54/54), done. remote: Total 66 (delta 1), reused 48 (delta 1), pack-reused 0 Unpacking objects: 100% (66/66), 389.53 KiB | 745.00 KiB/s, done. Directory /home/mrohan/vscode/testRep exists. . export project_dir=$HOME/vscode # change vscode to different name to test git clone export project=$project_dir/testRep # change APCSP to name of project from git clone export project_repo=&quot;https://github.com/evmyclipz/testRep.git&quot; # change to project of choice cd ~ if [ ! -d $project_dir ] then echo &quot;Directory does not exist&quot; fi echo &quot;Directory Exists&quot; if [ -d $project ] then echo &quot;Git Directory exists but I am removing files......&quot; rm -rf $project/* rm -rf $project/src/* rm -rf $project/volumes/* rmdir -p $project/src rmdir -p $project/volumes echo &quot;Git Directory exists but I am removing it......&quot; rmdir -p $project fi echo &quot;Directory does not exist&quot; . Directory Exists Git Directory exists but I am removing files...... rmdir: failed to remove &#39;/home/mrohan/vscode/testRep/src&#39;: No such file or directory rmdir: failed to remove &#39;/home/mrohan/vscode/testRep/volumes&#39;: No such file or directory Git Directory exists but I am removing it...... rmdir: failed to remove &#39;/home/mrohan/vscode/testRep&#39;: Directory not empty Directory does not exist .",
            "url": "https://evmyclipz.github.io/sample1_blog/2022/08/27/Bashsample.html",
            "relUrl": "/2022/08/27/Bashsample.html",
            "date": " • Aug 27, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "MyBash",
            "content": "echo &quot;Displaying Java version&quot; java --version echo &quot;Displaying Java compiler version&quot; javac --version echo &quot;Displaying Python version&quot; python --version . Displaying Java version openjdk 11.0.16 2022-07-19 OpenJDK Runtime Environment (build 11.0.16+8-post-Ubuntu-0ubuntu120.04) OpenJDK 64-Bit Server VM (build 11.0.16+8-post-Ubuntu-0ubuntu120.04, mixed mode, sharing) Displaying Java compiler version javac 11.0.16 Displaying Python version Python 3.9.12 . echo &quot;Diplaying Bash Version&quot; bash --version echo &quot;Displaying VSCODE version&quot; code --version echo &quot;Displaying list of Jupyter Kernel&quot; jupyter kernelspec list #echo &quot;Diplaying Jupyter version&quot; #jupyter --version . Diplaying Bash Version GNU bash, version 5.0.17(1)-release (x86_64-pc-linux-gnu) Copyright (C) 2019 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt; This is free software; you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Displaying VSCODE version 1.70.2 e4503b30fc78200f846c62cf8091b76ff5547662 x64 Displaying list of Jupyter Kernel Available kernels: bash /home/mrohan/.local/share/jupyter/kernels/bash java /home/mrohan/.local/share/jupyter/kernels/java javascript /home/mrohan/.local/share/jupyter/kernels/javascript python3 /home/mrohan/.local/share/jupyter/kernels/python3 . echo &quot;Diplaying Anaconda version&quot; conda --version echo &quot;Diplaying Anaconda information&quot; conda info . Diplaying Anaconda version conda 4.13.0 Diplaying Anaconda information active environment : base active env location : /home/mrohan/anaconda3 shell level : 1 user config file : /home/mrohan/.condarc populated config files : conda version : 4.13.0 conda-build version : 3.21.8 python version : 3.9.12.final.0 virtual packages : __linux=4.4.0=0 __glibc=2.31=0 __unix=0=0 __archspec=1=x86_64 base environment : /home/mrohan/anaconda3 (writable) conda av data dir : /home/mrohan/anaconda3/etc/conda conda av metadata url : None channel URLs : https://repo.anaconda.com/pkgs/main/linux-64 https://repo.anaconda.com/pkgs/main/noarch https://repo.anaconda.com/pkgs/r/linux-64 https://repo.anaconda.com/pkgs/r/noarch package cache : /home/mrohan/anaconda3/pkgs /home/mrohan/.conda/pkgs envs directories : /home/mrohan/anaconda3/envs /home/mrohan/.conda/envs platform : linux-64 user-agent : conda/4.13.0 requests/2.27.1 CPython/3.9.12 Linux/4.4.0-19041-Microsoft ubuntu/20.04.4 glibc/2.31 UID:GID : 1000:1000 netrc file : None offline mode : False . echo &quot;Displaying Anaconfa list&quot; conda list . Displaying Anaconfa list # packages in environment at /home/mrohan/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39h06a4308_1 _libgcc_mutex 0.1 main _openmp_mutex 4.5 1_gnu aiohttp 3.8.1 py39h7f8727e_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39h06a4308_0 anaconda-navigator 2.1.4 py39h06a4308_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39h06a4308_0 appdirs 1.4.4 pyhd3eb1b0_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39h7f8727e_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39h06a4308_0 astropy 5.0.4 py39hce1f21e_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bash-kernel 0.7.2 pypi_0 pypi bcrypt 3.2.0 py39he8ac12f_0 beautifulsoup4 4.11.1 py39h06a4308_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39h7f8727e_0 bkcharts 0.2 py39h06a4308_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h8c45485_0 bokeh 2.4.2 py39h06a4308_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39hce1f21e_0 brotli 1.0.9 he6710b0_2 brotlipy 0.7.0 py39h27cfd23_1003 brunsli 0.1 h2531618_0 bzip2 1.0.8 h7b6447c_0 c-ares 1.18.1 h7f8727e_0 ca-certificates 2022.3.29 h06a4308_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39h06a4308_2 cffi 1.15.0 py39hd667e15_1 cfitsio 3.470 hf0d0db6_6 chardet 4.0.0 py39h06a4308_1003 charls 2.2.0 h2531618_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39h06a4308_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39h06a4308_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.13.0 py39h06a4308_0 conda-build 3.21.8 py39h06a4308_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39h7f8727e_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39hd23ed53_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 h7f8727e_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39h295c915_0 cytoolz 0.11.0 py39h27cfd23_0 daal4py 2021.5.0 py39h78b71dc_0 dal 2021.5.1 h06a4308_803 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39h06a4308_1 dbus 1.13.18 hb2f20db_0 debugpy 1.5.1 py39h295c915_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39h06a4308_1 entrypoints 0.4 py39h06a4308_0 et_xmlfile 1.1.0 py39h06a4308_0 executing 0.8.3 pyhd3eb1b0_0 expat 2.4.4 h295c915_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fontconfig 2.13.1 h6c09931_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 h70c0345_0 frozenlist 1.2.0 py39h7f8727e_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39h06a4308_1 gensim 4.1.2 py39h295c915_0 giflib 5.2.1 h7b6447c_0 glib 2.69.1 h4ff587b_1 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h2531618_2 gmpy2 2.1.2 py39heeb90bb_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h27cfd23_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39h06a4308_0 greenlet 1.1.1 py39h295c915_0 grpcio 1.42.0 py39hce63b2e_0 gst-plugins-base 1.14.0 h8213a91_2 gstreamer 1.14.0 h28cd5cc_2 h5py 3.6.0 py39ha0f2276_0 hdf5 1.10.6 hb1b8bf9_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 he6710b0_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39h4cda21f_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39h06a4308_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39h06a4308_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 h06a4308_3561 intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.9.1 py39h06a4308_0 ipython 8.2.0 py39h06a4308_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39h06a4308_1 jeepney 0.7.1 pyhd3eb1b0_0 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e h7f8727e_0 jq 1.6 h27cfd23_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39h06a4308_0 jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 h7b6447c_2 keyring 23.4.0 py39h06a4308_0 kiwisolver 1.3.2 py39h295c915_0 krb5 1.19.2 hac12032_0 lazy-object-proxy 1.6.0 py39h27cfd23_0 lcms2 2.12 h3be6417_0 ld_impl_linux-64 2.35.1 h7274673_9 lerc 3.0 h295c915_0 libaec 1.0.4 he6710b0_1 libarchive 3.4.2 h62408e4_0 libcrc32c 1.1.1 he6710b0_2 libcurl 7.82.0 h0b77cf5_0 libdeflate 1.8 h7f8727e_5 libedit 3.1.20210910 h7f8727e_0 libev 4.33 h7f8727e_1 libffi 3.3 he6710b0_2 libgcc 7.2.0 h69d50b8_2 libgcc-ng 9.3.0 h5101ec6_17 libgfortran-ng 7.5.0 ha8ba4b0_17 libgfortran4 7.5.0 ha8ba4b0_17 libgomp 9.3.0 h5101ec6_17 libidn2 2.3.2 h7f8727e_0 liblief 0.11.5 h295c915_1 libllvm11 11.1.0 h3826bc1_1 libnghttp2 1.46.0 hce63b2e_0 libpng 1.6.37 hbc83047_0 libprotobuf 3.19.1 h4ff587b_0 libsodium 1.0.18 h7b6447c_0 libspatialindex 1.9.3 h2531618_0 libssh2 1.10.0 h8f2d780_0 libstdcxx-ng 9.3.0 hd4cf53a_17 libtiff 4.2.0 h85742a9_0 libunistring 0.9.10 h27cfd23_0 libuuid 1.0.3 h7f8727e_2 libwebp 1.2.2 h55f646e_0 libwebp-base 1.2.2 h7f8727e_0 libxcb 1.14 h7b6447c_0 libxml2 2.9.12 h03d6c58_0 libxslt 1.1.34 hc22bd24_0 libzopfli 1.0.3 he6710b0_0 llvmlite 0.38.0 py39h4ff587b_0 locket 0.2.1 py39h06a4308_2 lxml 4.8.0 py39h1f438cf_0 lz4-c 1.9.3 h295c915_1 lzo 2.10 h7b6447c_2 markdown 3.3.4 py39h06a4308_0 markupsafe 2.0.1 py39h27cfd23_0 matplotlib 3.5.1 py39h06a4308_1 matplotlib-base 3.5.1 py39ha18d171_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39h06a4308_1 mistune 0.8.4 py39h27cfd23_1000 mkl 2021.4.0 h06a4308_640 mkl-service 2.4.0 py39h7f8727e_0 mkl_fft 1.3.1 py39hd3c417c_0 mkl_random 1.2.2 py39h51133e4_0 mock 4.0.3 pyhd3eb1b0_0 mpc 1.1.0 h10f8cd9_1 mpfr 4.0.2 hb69a4c5_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39h06a4308_0 msgpack-python 1.0.2 py39hff7bd54_1 multidict 5.2.0 py39h7f8727e_2 multipledispatch 0.6.0 py39h06a4308_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39h06a4308_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39h06a4308_0 nbconvert 6.4.4 py39h06a4308_0 nbformat 5.3.0 py39h06a4308_0 ncurses 6.3 h7f8727e_2 nest-asyncio 1.5.5 py39h06a4308_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nodejs 6.11.2 h3db8ef7_0 nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39h06a4308_0 numba 0.55.1 py39h51133e4_0 numexpr 2.8.1 py39h6abb31d_0 numpy 1.21.5 py39he7a7128_1 numpy-base 1.21.5 py39hf524024_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h27cfd23_0 openjpeg 2.4.0 h3ad879b_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n h7f8727e_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39h295c915_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39h06a4308_0 param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39h06a4308_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 patchelf 0.13 h295c915_0 pathspec 0.7.0 py_0 patsy 0.5.2 py39h06a4308_1 pcre 8.45 h295c915_0 pep8 1.7.1 py39h06a4308_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39h22f2fdc_0 pip 21.2.4 py39h06a4308_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39h06a4308_1 poyo 0.5.0 pyhd3eb1b0_0 prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39h295c915_0 psutil 5.8.0 py39h27cfd23_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39h295c915_1 pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h27cfd23_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39h06a4308_0 pycurl 7.44.1 py39h8f2d780_1 pydispatcher 2.0.5 py39h06a4308_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h27cfd23_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39h06a4308_0 pylint 2.9.6 py39h06a4308_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39h295c915_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h2531618_6 pyrsistent 0.18.0 py39heee7806_0 pysocks 1.7.1 py39h06a4308_0 pytables 3.6.1 py39h77479fe_1 pytest 7.1.1 py39h06a4308_0 python 3.9.12 h12debd9_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h2531618_3 pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39h7f8727e_0 pyxdg 0.27 pyhd3eb1b0_0 pyyaml 6.0 py39h7f8727e_1 pyzmq 22.3.0 py39h295c915_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h5867ecd_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39h06a4308_0 readline 8.1.2 h7f8727e_1 regex 2022.3.15 py39h7f8727e_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39h06a4308_1 ruamel_yaml 0.15.100 py39h27cfd23_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39h51133e4_0 scikit-learn 1.0.2 py39h51133e4_1 scikit-learn-intelex 2021.5.0 py39h06a4308_0 scipy 1.7.3 py39hc147768_0 scrapy 2.6.1 py39h06a4308_0 seaborn 0.11.2 pyhd3eb1b0_0 secretstorage 3.3.1 py39h06a4308_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39h06a4308_0 sip 4.19.13 py39h295c915_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 h295c915_0 sniffio 1.2.0 py39h06a4308_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39h06a4308_1 spyder-kernels 2.1.3 py39h06a4308_0 sqlalchemy 1.4.32 py39h7f8727e_0 sqlite 3.38.2 hc218d9a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39h7f8727e_0 sympy 1.10.1 py39h06a4308_0 tabulate 0.8.9 py39h06a4308_0 tbb 2021.5.0 hd09550d_0 tbb4py 2021.5.0 py39hd09550d_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39h06a4308_0 terminado 0.13.1 py39h06a4308_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h1ccaba5_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h27cfd23_0 tqdm 4.64.0 py39h06a4308_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39h7f8727e_0 typed-ast 1.4.3 py39h7f8727e_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39h295c915_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 h7b6447c_0 urllib3 1.26.9 py39h06a4308_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h06a4308_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39h06a4308_1 websocket-client 0.58.0 py39h06a4308_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h0b77cf5_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39h06a4308_0 wrapt 1.12.1 py39he8ac12f_1 wurlitzer 3.0.2 py39h06a4308_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xz 5.2.5 h7b6447c_0 yaml 0.2.5 h7b6447c_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h27cfd23_0 zeromq 4.3.4 h2531618_0 zfp 0.5.5 h295c915_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h7f8727e_2 zope 1.0 py39h06a4308_1 zope.interface 5.4.0 py39h7f8727e_0 zstd 1.4.9 haebb681_0 .",
            "url": "https://evmyclipz.github.io/sample1_blog/2022/08/26/new-bash.html",
            "relUrl": "/2022/08/26/new-bash.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Ap Physics   Measurement And Graphical Analysis",
            "content": "Rohan Malipeddi 1 . AP Physics C: Mechanics . 19 August 2022 . AP Physics Lab #1 . Determine the radius in cm of the different sized disks. | . Measure the disk’s diameter using a ruler and apply the 2-5-8 rule for the last uncertain digit. . | Divide the measured length by 2. . | Determine the mass, in g, of the different sized disks. | . Measure the mass of each disk using a scale. | Determine the height (thickness) in cm of the disk material. (*DensityAluminum= 2.70 g/cm) | . Use the density equation to find the height. Height = (density *Area of the disk) / mass . | Do this for all the disks . | Pre-experiment question: . What is the precision of the meterstick used? Explain how you know using the data you found. | The precision of the meterstick used is to the 100th of a cm. I know this because I measured exactly to the last millimeter (10th’s place) and then used the 2-5-8 rule for the last uncertain digit (100th’s place) . Title: Relationship between mass and radius table .         . Circle # | Radius (cm) | Mass (g) | Linearized Values (cm2 or r^2) | . 1 | 6.80 | 0.845 | 46.240 | . 2 | 5.155 | 0.488 | 26.574 | . 3 | 3.900 | 0.300 | 15.210 | . 4 | 3.100 | 0.222 | 9.610 | . 5 | 2.355 | 0.078 | 5.546 | . Graph #1- Radius vs Mass . . Non-linear or quadratic graph showing the relationship between mass(g) of disks (y axis) and radius(cm) of disks (x axis), assuming uniform thickness. . Equation:y= 0.012463x^2 + 0.053317-0.099991 . Graph #2- Linearized Graph (Radius)^2 vs Mass . . This is a linearized graph with radius squared(cm^2)(x-axis) and mass(g)(y-axis). . How did we linearize our graph? From the original table , we squared the radius and kept the mass same because we found that the original graph of non-linearized data looked very similar to a parabola and so figured out that, if we square the radius, the graph becomes linearized. . Best fit line equation: y=0.010141+0.018138x . . . . . . MC Question: . E . | B . | C . |",
            "url": "https://evmyclipz.github.io/sample1_blog/2022/08/25/AP-Physics-Measurement-and-Graphical-analysis.html",
            "relUrl": "/2022/08/25/AP-Physics-Measurement-and-Graphical-analysis.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Notes 8/24",
            "content": "Notes(Week 1): . Can put work docs and google docs(docx) in fastapges blog | Go to code.org to elarn more about java | {site base url}-to make images appear on pages | Key &amp; value: Eg, title(key): Rohan Malipeddi Sample Blog(value) | config.yml is used by Fastpages change fastpage title | in pages, one can put numbers on the left hand side to make them show in order. | Things to still learn: . Learn what is liquid code | Learn how to make your home page dark theme | Learn how to change the your blog symbol. | |",
            "url": "https://evmyclipz.github.io/sample1_blog/markdown/2022/08/24/Fastpagestour.html",
            "relUrl": "/markdown/2022/08/24/Fastpagestour.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "My Markdown Post",
            "content": "My Markdown Post . ##LISTS . HELLO | BYE | .",
            "url": "https://evmyclipz.github.io/sample1_blog/markdown/2022/08/21/my-markdown-post.html",
            "relUrl": "/markdown/2022/08/21/my-markdown-post.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Fastpages Notebook Blog My Python Post",
            "content": "print(&quot;HELLO WORLD&quot;) . HELLO WORLD .",
            "url": "https://evmyclipz.github.io/sample1_blog/2022/08/21/PythonSample.html",
            "relUrl": "/2022/08/21/PythonSample.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Fastpages Notebook Blog My Python Post",
            "content": "print(&quot;HELLO WORLD&quot;) . HELLO WORLD .",
            "url": "https://evmyclipz.github.io/sample1_blog/2022/08/21/Python-Sample.html",
            "relUrl": "/2022/08/21/Python-Sample.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Fastpages Notebook Blog My Java Post",
            "content": "String msg = &quot;Hello World&quot;; System.out.println(msg); . Hello World . //This demonstrates the average of three different primitive data types public class DefineNewprg{ public static void main(String[] args) { int x = 990; float y = 36.98f; double w = 556.090930; double z; String avg, navg; //To control output boolean displayavg = false; z = (x+y+w)/3; //To display result in human language avg = &quot;The average of some three numbers is &quot;+z; navg = &quot;Average cannot be computed&quot;; if (!displayavg) System.out.print(avg); else System.out.print(navg); } } DefineNewprg.main(null) . The average of some three numbers is 527.6903034895832 . //This demonstrates the average of three different primitive data types public class DefineNewprg{ public static void main(String[] args) { int x = 990; float y = 36.98f; double w = 556.090930; double z; String avg, navg; //To control output boolean displayavg = false; z = (x+y+w)/3; //To display result in human language avg = &quot;The average of some three numbers is &quot;+z; navg = &quot;Average cannot be computed&quot;; if (displayavg) System.out.print(avg); else System.out.print(navg); } } DefineNewprg.main(null) . Average cannot be computed . import java.util.Scanner; public class Conversion{ public static void main(String[] args) { Scanner input,input2; String beh=&quot;Celsius&lt;-&gt;Farenheit conversion&quot;; double celsius, faren, celsius2, faren2; System.out.println(beh); input = new Scanner(System.in); System.out.print(&quot;Enter celsius:&quot;); celsius = input.nextFloat(); faren =(celsius * 1.8) +32; System.out.println(celsius); System.out.println(&quot;In Farenheit:&quot;+faren); input2 = new Scanner(System.in); System.out.print(&quot;Enter farenheit:&quot;); faren2 = input2.nextFloat(); celsius2 =(faren2-32)*5/9; System.out.println(faren2); System.out.println(&quot;In Celsius:&quot;+celsius2); } } Conversion.main(null) . Celsius&lt;-&gt;Farenheit conversion Enter celsius:21.0 In Farenheit:69.80000000000001 Enter farenheit:90.0 In Celsius:32.22222222222222 . My First object oriented programm(Console based) . This program prompts the user for the first, second, third and fourth number in a matrix, which are taken as input and show output through by assigning the numbers from left to right and top to bottom. Then, once 4 number are given, it prompts them for another 4 for the second matrix and adds them to produce output. . Objects Used . Scanner object is imported to obtain inputs. | Under Matrix2by2, there are 2 other objects which function to store the matrix. | . College board topics/Member . A 2D array was created to store values of the matrix | . Methods . SetData, print, display, add | . Difference between console and GUI . Console: . No animations | Very plain and monotonic | Only take in input and give output back. | Monotomous-can only do one thing at a time. | Example: Windows Command promt, powershell terminal. | . GUI: . Can contain a lot of animations with colorful buttons, organized format for easy-use. | Can do loads of different operations like playing videos, transitions, etc.. | Can take input from sources other than keyboard. | Multitasking capabilities. | More user interactive and more accessible. | Very graphic | Example: Any modern website, apple iphone introductions on apple home page. | . //importing scanner import java.util.Scanner; public class Matrix2by2 { // A class is defined here public int arr[][];//array declared here //instance of a class or an object //use of constructer to create objects which take control of events and actions public Matrix2by2() { arr = new int[2][2];//array defined here } //New obejct with different parameters which constructs my own array public Matrix2by2(int a,int b,int c,int d) { arr = new int[2][2];//array defined here setData(a,b,c,d); display(arr); } //public declaration because the variables need to be accessed throughout the program. public void setData(int a,int b,int c,int d) { //Method Setdata which assigns input to arr[][] this.arr[0][0]=a; this.arr[0][1]=b; this.arr[1][0]=c; this.arr[1][1]=d; } //public declaration because our main programm uses this method public void print() { //Method print to prompt used to take input final Scanner ms=new Scanner(System.in);//use of object scanner to p[rompt for input int a,b,c,d; boolean quit = false; while(!quit) { try { //safety feature to only take in number System.out.println(&quot;Enter first number of the first matrix&quot;); a = ms.nextInt(); System.out.println(&quot;Enter second number of the first matrix&quot;); b = ms.nextInt(); System.out.println(&quot;Enter third number of the first matrix&quot;); c = ms.nextInt(); System.out.println(&quot;Enter fourth number of the first matrix&quot;); d = ms.nextInt(); this.setData(a,b,c,d); display(arr); quit=true; } catch (Exception e) { ms.nextLine(); System.out.println( e +&quot;Not a number: try again&quot;); } } ms.close();//Another safety feature } private void display(int[][] arr) { //Method to print out the output in format. System.out.println(); System.out.println(&quot;|&quot;+arr[0][0]+&quot; &quot;+arr[0][1]+&quot;|&quot;); System.out.println(&quot; - - &quot;); System.out.println(&quot;|&quot;+arr[1][0]+&quot; &quot;+arr[1][1]+&quot;|&quot;); System.out.println(); } //Mutating input data to produce new output data. public void add(int[][] a1) { //Method to add two arrays int a2[][] = new int[2][2]; a2[0][0]=arr[0][0]+a1[0][0]; a2[0][1]=arr[0][1]+a1[0][1]; a2[1][0]=arr[1][0]+a1[1][0]; a2[1][1]=arr[1][1]+a1[1][1]; display(a2); } //Another example of mutating data which multiplies two array public void multiply(int[][] a1) { int a2[][] = new int[2][2]; a2[0][0]=(arr[0][0]*a1[0][0])+(arr[0][1]*a1[1][0]); a2[0][1]=(arr[0][0]*a1[0][1])+(arr[0][1]*a1[1][1]); a2[1][0]=(arr[1][0]*a1[0][0])+(arr[1][1]*a1[1][0]); a2[1][1]=(arr[1][0]*a1[0][1])+(arr[1][1]*a1[1][1]); display(a2); } public static void main(String[] args) { //Main program Matrix2by2 matrixOp1 = new Matrix2by2();//creating objects using Matrix2by2 constructer. Object#1 Matrix2by2 matrixOp2 = new Matrix2by2();//object#1 System.out.println(&quot;Matrix with my own data&quot;); Matrix2by2 matrixOp3 = new Matrix2by2(2,3,4,5); //Object with own data System.out.println(&quot;Enter 1st matrix.&quot;); matrixOp1.print(); System.out.println(&quot;Enter 2nd matrix&quot;); matrixOp2.print(); System.out.println(&quot;The output of matrix addition is &quot;); //Line below uses the values in the first matrix and mutate them by using the values of the second matrixOp1.add(matrixOp2.arr);//object calling a method //putting matrixOp2.arr into the brackets to let add function take the values of the second matrix. System.out.println(&quot;The output of matrix multiplication is &quot;); matrixOp1.multiply(matrixOp2.arr);//use of multiplication method System.out.println(&quot;The output of matrix with own matrix multiplication is &quot;); matrixOp1.multiply(matrixOp3.arr);//use of multiplication method } } Matrix2by2.main(null) . Matrix with my own data |2 3| - - |4 5| Enter 1st matrix. Enter first number of the first matrix Enter second number of the first matrix Enter third number of the first matrix Enter fourth number of the first matrix |5 8| - - |1 3| Enter 2nd matrix Enter first number of the first matrix Enter second number of the first matrix Enter third number of the first matrix Enter fourth number of the first matrix |4 6| - - |7 8| The output of matrix addition is |9 14| - - |8 11| The output of matrix multiplication is |76 94| - - |25 30| The output of matrix with own matrix multiplication is |42 55| - - |14 18| .",
            "url": "https://evmyclipz.github.io/sample1_blog/2022/08/21/JavaSample.html",
            "relUrl": "/2022/08/21/JavaSample.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://evmyclipz.github.io/sample1_blog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post19": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://evmyclipz.github.io/sample1_blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Little about me: . Senior at High school | interested in Computers and programming | know lots of people, lot of people know me but I have few friends |",
          "url": "https://evmyclipz.github.io/sample1_blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
      ,"page3": {
          "title": "Notes",
          "content": "Notes for CSA(Unit 1) . Vocab: . sequence: Severeal line of code | Key &amp; Value: Eg. title: Home of the nighthawks. | Wrapper Class: wraps around to create an object and contains primitive data types. | Method Signature: Has a class name and parameters. | Constructer: constructs an object using sub-class name to perform super-class actions. | Inheritance: creating new class from existing class. | Data types are divided into two groups: . Primitive data types - includes byte, short, int, long, float, double, boolean and char | Non-primitive data types - such as String, Arrays and Classes | Primitive Data Types . A primitive data type specifies the size and type of variable values, and it has no additional methods. . There are eight primitive data types in Java: . Data Type Size Description . byte | 1 byte | Stores whole numbers from -128 to 127 | . short | 2 bytes | Stores whole numbers from -32,768 to 32,767 | . int | 4 bytes | Stores whole numbers from -2,147,483,648 to 2,147,483,647 | . long | 8 bytes | Stores whole numbers from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807 | . float | 4 bytes | Stores fractional numbers. Sufficient for storing 6 to 7 decimal digits | . double | 8 bytes | Stores fractional numbers. Sufficient for storing 15 decimal digits | . boolean | 1 bit | Stores true or false values | . char | 2 bytes | Stores a single character/letter or ASCII values | . Non-Primitive Data Types . Non-primitive data types are called reference types because they refer to objects. . The main difference between primitive and non-primitive data types are: . Primitive types are predefined (already defined) in Java. Non-primitive types are created by the programmer and is not defined by Java (except for String). | Non-primitive types can be used to call methods to perform certain operations, while primitive types cannot. | A primitive type has always a value, while non-primitive types can be null. | A primitive type starts with a lowercase letter, while non-primitive types starts with an uppercase letter. | The size of a primitive type depends on the data type, while non-primitive types have all the same size. | Examples of non-primitive types are Strings, Arrays, Classes, Interface, etc. You will learn more about these in a later chapter. | . Frontend Development . Front-end web development is the development of the graphical user interface of a website, through the use of HTML, CSS, and JavaScript, so that users can view and interact with that website. . Config.yaml can be used to create there user interfaces. | CSS style layout is provided by using Themes provided through GH Pages. Each page we make we assume the defined theme and insert our HTML fragments, local page style, and local page JavaScript. | Fastpages defaults to the minima theme. Review the the README.md for style or layout customizations. | Jekyll is in charge of deployment of the pages(fastpages is deployed using Jekyll). | Liquid is a language and an example of this is in tags.html of APCSA repo. | Challenge: Use liquid to build the APCSA schedule homepage(it is originally built using html). | Learn liquid | HTML generation is done through liquid(a template language like Jinja2 or thymleaf). | Javascript can also be used to build user interfaces(it was used to build calculator, Binary, graphs, snake game.) | Make a game, create cos and sin in calculator | . Tips . Create a about me page to build resumes or get ideas to create a resume. | update blog regularly. | Create a menu | Use the Docker to update the changes repidly. | .",
          "url": "https://evmyclipz.github.io/sample1_blog/notes/",
          "relUrl": "/notes/",
          "date": ""
      }
      
  

  

  

  
  

  
  

  
  

  
  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://evmyclipz.github.io/sample1_blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}